# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="spaceship"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME="archcraft"
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git z zsh-autosuggestions zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# On-demand rehash
zshcache_time="$(date +%s%N)"

autoload -Uz add-zsh-hook

rehash_precmd() {
  if [[ -a /var/cache/zsh/pacman ]]; then
    local paccache_time="$(date -r /var/cache/zsh/pacman +%s%N)"
    if (( zshcache_time < paccache_time )); then
      rehash
      zshcache_time="$paccache_time"
    fi
  fi
}

add-zsh-hook -Uz precmd rehash_precmd

# omz
alias ohmyzsh="thunar ~/.oh-my-zsh"

# ls
alias l='ls -lh'
alias ll='ls -lah'
alias la='ls -A'
alias lm='ls -m'
alias lr='ls -R'
alias lg='ls -l --group-directories-first'

# git
alias gaa="git add --all"
alias ga="git add"
alias gp="git push"
alias gpl="git pull"
alias gc="gitmoji -c"
alias gcm="git commit -m"
alias gs="git status"
alias gcl="git clone"

# docker
alias dp="docker ps" 
alias dpa="docker ps -a" 
alias dcu="docker compose up -d" 
alias dcd="docker compose down"
alias dcp="docker compose ps"
alias dcl="docker compose logs"

# symfony
alias sf="symfony"
alias sfstart="symfony serve -d --allow-http"
alias sfopen="symfony open:local"
alias sfstop="symfony server:stop"
alias sflogs="symfony server:log"
alias sfpsql="symfony run psql"
alias sfvar="symfony var:export --multiline"
alias sfdump="symfony console config:dump"
alias sfdwiring="symfony console debug:autowiring"
alias sfdcontainer="symfony console debug:container"
alias sfdconfig="symfony console debug:config"
alias sfdroute="symfony console debug:router"

# laravel
alias sail='[ -f sail ] && sh sail || sh vendor/bin/sail'

### basic
alias mv='mv -i'
alias cp='cp -i'

alias .='source'

mkcd(){
    mkdir $1 && cd $1
}

alias diff='diff -u0 -w'

alias du='du -sh'
alias dusort='du -sh * | sort -hr'

# short
alias abspath='readlink -e'
alias jsonview="python -m json.tool"
mdview() {
  markdown "$1" | lynx -stdin
}
alias passphrase="grep '^[a-z]*$' /usr/share/dict/british-english|shuf| head -n4|tr '\n' ' '"

# specific
alias ifit='lpr -o fit-to-page'     # print and fit
alias deltemp='rm *~'
svg2png () {
  inkscape -z -e $1.png $1.svg
}
ex () { # stolen from (?)
  if [ -f $1 ] ; then
      case $1 in
          *.tar.bz2)   tar xvjf $1    ;;
          *.tar.gz)    tar xvzf $1    ;;
          *.bz2)       bunzip2 $1     ;;
          *.rar)       unrar x $1     ;;
          *.gz)        gunzip $1      ;;
          *.tar)       tar xvf $1     ;;
          *.tbz2)      tar xvjf $1    ;;
          *.tgz)       tar xvzf $1    ;;
          *.zip)       unzip $1       ;;
          *.Z)         uncompress $1  ;;
          *.7z)        7z x $1        ;;
          *.exe)       cabextract $1  ;;
          *)           echo "'$1': unrecognized file compression" ;;
      esac
  else
      echo "'$1' is not a valid file"
  fi
}

alias vi='nvim'
alias vim='nvim'
alias :e='nvim'
alias aliases='nvim ~/.aliases'
alias zshrc='nvim ~/.zshrc'
alias vimrc='nvim ~/.vimrc'

export EDITOR='nvim'
export BROWSER='google-chrome-stable'
alias img-optimize=/home/rherault/.img-optimize/optimize.sh

# Tools
alias pdf='docker run -d \
  -p 8080:8080 \
  -v /location/of/trainingData:/usr/share/tesseract-ocr/5/tessdata \
  -v /location/of/extraConfigs:/configs \
  -e DOCKER_ENABLE_SECURITY=false \
  --name pdf \
  frooodle/s-pdf:latest && echo "GO TO localhost:8080"'
alias pdf-stop='docker stop pdf && docker rm pdf'

alias ollama-start='docker run -d -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama'
alias ollama='docker exec -it ollama ollama run'
alias ollama-stop='docker stop ollama && docker rm ollama'

eval "$(github-copilot-cli alias -- "$0")"

export PATH="$PATH:$HOME/.local/bin"
